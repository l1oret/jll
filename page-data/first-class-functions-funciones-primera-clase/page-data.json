{"componentChunkName":"component---src-templates-blog-post-js","path":"/first-class-functions-funciones-primera-clase/","result":{"data":{"site":{"siteMetadata":{"title":"Out of the loop"}},"markdownRemark":{"id":"301507cd-8088-55da-a113-3f868f3ca969","excerpt":"O mas bien, el de cuando decidí contribuir en MDN y empecé por las first-class functions. Esta idea de contribuir en un proyecto open source ya la tenía hace…","html":"<p>O mas bien, el de cuando decidí contribuir en <a href=\"https://wiki.developer.mozilla.org/es/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN</a> y empecé por las <strong>first-class functions</strong>. Esta idea de contribuir en un proyecto open source ya la tenía hace tiempo y MDN me venía como anillo al dedo, ya que en ese momento no quería contribuir escribiendo código sino que quería colaborar de alguna otra manera. De hecho, opté por añadir traducciones o pequeñas modificaciones a contenido ya existente. <a href=\"https://wiki.developer.mozilla.org/es/profiles/l1oret\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mis contribuciones</a>, al menos de momento, son sin lugar a dudas escasas, pero estamos en ello.</p>\n<h2>¿Qué son las first-class functions?</h2>\n<p>Siempre y cuando una función se trate como cualquier otra variable, se dice que ese lenguaje tiene first-class functions y JS (a.k.a. JavaScript) no iba a ser menos. En el caso de JavaScript las funciones son first-class objects ya que pueden ser <a href=\"#almacenadas-en-una-variable\">almacenadas en una variable, un array y un objeto</a>, pueden ser <a href=\"#pasadas-como-argumentos-en-una-funci%C3%B3n\">pasadas como argumentos a una función</a> y pueden ser <a href=\"#devueltas-desde-una-funci%C3%B3n\">devueltas desde una función</a>.</p>\n<h3>Almacenadas en una variable</h3>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// Variable</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">diHola</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'¡Hola!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"token function\">diHola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → ¡Hola!</span>\n\n<span class=\"token comment\">// Array</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> saludos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span>saludos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>diHola<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>saludos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → [f]</span>\nsaludos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// → ¡Hola!</span></span>\n<span class=\"token comment\">// Object</span>\n<span class=\"token keyword\">const</span> saludo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> diHola <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>saludo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → {diHola: f}</span>\nsaludo<span class=\"token punctuation\">.</span><span class=\"token function\">diHola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → ¡Hola!</span></code></pre></div>\n<h3>Pasadas como argumentos en una función</h3>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">diHola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">'Hola '</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">saludar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">saludo<span class=\"token punctuation\">,</span> nombre</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token function\">saludo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nombre<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// → Hola JavaScript</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token comment\">// Pasamos `diHola` como argumento de la función saludar</span></span><span class=\"token function\">saludar</span><span class=\"token punctuation\">(</span>diHola<span class=\"token punctuation\">,</span> <span class=\"token string\">'JavaScript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Devueltas desde una función</h3>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">diHola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'¡Hola!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>Para invocar a la función podemos hacerlo de dos maneras. Usando una variable o\ncon doble paréntesis.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> saludar <span class=\"token operator\">=</span> <span class=\"token function\">diHola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">saludar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → ¡Hola!</span>\n<span class=\"token function\">diHola</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// → ¡Hola!</span></code></pre></div>\n<p>A una función que devuelve una función se le llama habitualmente <a href=\"/higher-order-functions-funciones-orden-superior\">higher-order\nfunction</a>. Pero eso ya lo veremos en el siguiente episodio: <a href=\"/higher-order-functions-funciones-orden-superior\">El de las higher-order functions o funciones de orden superior</a>. Por cierto, <a href=\"https://developer.mozilla.org/es/docs/Glossary/Funcion_de_primera_clase\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">este es la entrada en MDN de las funciones de primera de clase</a>.</p>","frontmatter":{"title":"El de las first-class functions o funciones de primera clase","date":"20 abril, 2020","description":"O mas bien, el de cuando decidí contribuir en MDN y empecé por las first-class functions."}}},"pageContext":{"slug":"/first-class-functions-funciones-primera-clase/","previous":null,"next":{"fields":{"slug":"/higher-order-functions-funciones-orden-superior/"},"frontmatter":{"title":"El de las higher-order functions o funciones de orden superior"}}}},"staticQueryHashes":["240262808","3881471398"]}